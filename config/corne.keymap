/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    behaviors {
            as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  AS(Q) Q  AS(W) W  AS(F) F  AS(P) P  AS(B) B    AS(J) J  AS(L) L  AS(U) U  AS(Y) Y  &kp SEMICOLON  &kp BSPC
&kp LCTRL  AS(A) A  AS(R) R  AS(S) S  AS(T) T  AS(G) G    AS(M) M  AS(N) N  AS(E) E  AS(I) I    AS(O) O   &kp SQT
&kp LSHFT  AS(Z) Z  AS(X) X  AS(C) C  AS(D) D  AS(V) V    AS(K) K  AS(H) H    &kp COMMA      &kp DOT       &kp FSLH   &kp ESC
                                        &kp LGUI    &kp SPACE       &mo 1       &mo 2        &kp RET         &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &bt BT_CLR  &kp N7    &kp N8  &kp N9     &kp N0           &trans          &trans          &kp UP     &trans  &trans  &kp BSPC
   &trans  &bt BT_NXT  &kp N4    &kp N5  &kp N6     &trans           &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans    &trans
&kp LSHFT  &bt BT_PRV  &kp N1    &kp N2  &kp N3     &trans           &trans          &trans          &trans     &trans  &trans    &trans
                               &kp LGUI  &trans  &kp SPACE    &kp BACKSPACE          &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB    &kp EXCL      &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL  &bt BT_CLR  &bt BT_NXT  &bt BT_PRV    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT      &trans      &trans      &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                     &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };
    };
};
