/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
     &kp TAB  &kp Q  &kp W    &kp F                   &kp P  &kp B          &kp J                     &kp L      &kp U    &kp Y  &kp SEMICOLON       &trans
&kp LEFT_ALT  &kp A  &kp R    &kp S                   &kp T  &kp G          &kp M                     &kp N      &kp E    &kp I          &kp O  &mt DQT SQT
&kp LEFT_GUI  &kp Z  &kp X    &kp C                   &kp D  &kp V          &kp K                     &kp H  &kp COMMA  &kp DOT       &kp FSLH      &kp ESC
                            &kp TAB  &mt LEFT_CONTROL SPACE  &mo 1    &lt 2 ENTER  &mt LEFT_SHIFT BACKSPACE   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans         &trans  &kp N7  &kp N8  &kp N9  &kp N0    &trans   &kp C_AL_MAIL          &kp UP     &trans    &kp PAGE_UP  &trans
&trans  &kp LG(LS(S))  &kp N4  &kp N5  &kp N6  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp PAGE_DOWN  &trans
&trans    &kp LA(TAB)  &kp N1  &kp N2  &kp N3  &trans    &trans          &trans          &trans     &trans         &trans  &trans
                               &trans  &trans  &trans    &trans          &trans         &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp EXCL        &kp AT      &kp HASH      &kp DLLR     &kp PRCNT    &kp CARET   &kp AMPS  &kp LEFT_PARENTHESIS  &kp RPAR  &kp KP_MULTIPLY     &trans
&trans    &bt BT_CLR    &bt BT_NXT    &bt BT_PRV        &trans        &trans    &kp MINUS  &kp EQUAL              &kp LBKT  &kp RBKT         &kp BSLH  &kp GRAVE
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp UNDER   &kp PLUS              &kp LBRC  &kp RBRC         &kp PIPE  &kp TILDE
                                          &trans        &trans        &trans       &trans     &trans                &trans
            >;
        };
    };
};
